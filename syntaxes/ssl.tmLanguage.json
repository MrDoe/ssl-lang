{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Starlims Scripting Language",
  "patterns": [
    {
      "include": "#keywordsControl"
    },
    {
      "include": "#keywordsStorage"
    },
    {
      "include": "#expression"
    }
  ],
  "repository": {
    "keywordsControl": {
      "patterns": [
        {
          "name": "keyword.control",
          "match": ":(IF|DEFAULT|REGION|ENDREGION|ENDIF|ELSE|LOOP|WHILE|ENDWHILE|FOR|NEXT|EXITFOR|CASE|EXITCASE|RETURN|TRY|CATCH|FINALLY|ENDTRY|TO)\\b"
        }
      ]
    },
    "keywordsStorage": {
      "patterns": [
        {
          "name": "storage.type",
          "match": ":(PUBLIC|DECLARE|CLASS|INHERIT|PARAMETERS|PROCEDURE|ENDPROC)\\b"
        }
      ]
    },
    "expression": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#embeddedSql"
        },
        {
          "include": "#iif"
        },
        {
          "include": "#blueFunctions"
        },
        {
          "include": "#function"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#stringsDouble"
        },
        {
          "include": "#stringsSingle"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#langConstants"
        }
      ]
    },
    "comment": {
      "name": "comment.block.srvsrc",
      "begin": "/\\*",
      "end": ";"
    },
    "identifier": {
      "patterns": [
        {
          "name": "variables.other",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*:?(?!\\()"
        }
      ]
    },
    "blueFunctions": {
      "name": "support.function",
      "begin": "\\b(usrmes|UsrMes|AAddd|aadd|Empty|empty|execfunction|ExecFunction|doproc|DoProc|RunSql|runsql|CreateUDObject|createudobject)(\\()",
      "end": "\\)",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "begin": ",",
          "end": "(?=,)|(?=\\))",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "iif": {
      "name": "support.function",
      "begin": "\\b(iif)(\\()",
      "end": "\\)",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "begin": ",",
          "end": "(?=,)|(?=\\))",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "iif_in_sql": {
      "name": "support.function",
      "begin": "\\b(iif)(\\()",
      "end": "\\)",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "begin": ",",
          "end": "(?=,)|(?=\\))",
          "patterns": [
            {
              "include": "#expression_in_sql"
            }
          ]
        }
      ]
    },
    "function": {
      "begin": "\\b[a-zA-Z_][a-zA-Z0-9_]*(\\()",
      "end": "\\)",
      "name": "entity.name.function",
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "begin": ",",
          "end": "(?=,)|(?=\\))",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "langConstants": {
      "name": "constant.language",
      "match": "\\.(t|T|f|F)\\."
    },
    "numbers": {
      "name": "constant.numeric",
      "match": "-?[0-9]+(\\.[0-9]*)?|(\\.[0-9]+)"
    },
    "operator": {
      "name": "keyword.operator",
      "match": "(\\.(and|AND|or|OR)\\.|=|:=|>=?|<=?|==|\\+(?![0-9])|\\-(?![0-9]))"
    },
    "stringsDouble": {
      "name": "string.quoted.double",
      "begin": "\"",
      "end": "\""
    },
    "stringsSingle": {
      "name": "string.quoted.sinlge",
      "begin": "'",
      "end": "'"
    },
    "embeddedSql": {
      "begin": "([Ss][Qq][Ll][Ee][Xx][Ee][Cc][Uu][Tt][Ee]|[Rr][Uu][Nn][Ss][Qq][Ll]|[Ll][Ss][Ee][Aa][Rr][Cc][Hh]|[Ll][Ss][Ee][Ll][Ee][Cc][Tt]|[Sa][Qq][Ll][Uu][Tt][Ii][Ll][Ss]:[Gg][Ee][Tt][Uu][dD][oO])\\s*\\(\\s*",
      "end": "\\)|,",
      "name": "support.function",
      "patterns": [
        {
          "include": "#expression_in_sql"
        },
        {
          "begin": ",",
          "end": "(?=,)|(?=\\))",
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        }
      ]
    },
    "expression_in_sql": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#embeddedSqlStringsDouble"
        },
        {
          "include": "#embeddedSqlStringsSingle"
        },
        {
          "include": "#embeddedSql"
        },
        {
          "include": "#iif_in_sql"
        },
        {
          "include": "#blueFunctions"
        },
        {
          "include": "#function"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#langConstants"
        }
      ]
    },
    "embeddedSqlStringsDouble": {
      "name": "meta.embedded.block.sql",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "include": "source.sql"
        }
      ]
    },
    "embeddedSqlStringsSingle": {
      "name": "meta.embedded.block.sql",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "include": "source.sql"
        }
      ]
    }
  },
  "scopeName": "source.ssl"
}